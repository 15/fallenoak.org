---
import img1 from "../../assets/dash.png";
import { Image } from "astro:assets";
import Button from "../Button.astro";
import Testimonial from "./Testimonial.astro";
import { Icon } from "astro-icon/components";

import testimonials from "../../data/testimonials.js";
---

<section
  id="supporters"
  class="relative bg-yellow-50"
  style="background-image: linear-gradient(to top, #fefce8 0%, #fefce8 30%);"
>
  <div class="horizontal overflow-y-hidden hidden lg:block ">
    <div class="pin-wrap flex flex-col mt-24">
      <div
        class="text-4xl lg:text-7xl text-center uppercase font-semibold whitespace-nowrap"
      >
        <div>Our supporters</div>

        <div
          id="scroll-down-parent-supporters"
          class="mt-2 hidden opacity-100 lg:flex justify-center z-50"
        >
          <Icon
            id="scroll-down-indicator-supporters"
            class="w-12 h-12 p-2 text-black cursor-pointer hover:text-yellow-50 hover:bg-[#937666] duration-300 rounded"
            name="ph:caret-down-bold"
            onclick="window.lenis.scrollTo('#stats')"
          />
        </div>
      </div>
      <div class="animation-wrap to-right pr-8 pl-4 mt-0">
        {
          testimonials.slice(0, 9).map((t, idx) => (
            <div class="item">
              <Testimonial {...t} idx={idx} />
            </div>
          ))
        }
        <div class="item">
          <a
            href="https://www.facebook.com/FallenOakEquineRescue/reviews"
            target="_blank"
            class="group hover:scale-[1.1] hover:rotate-3 duration-300 flex items-center justify-center text-center text-2xl font-medium flex-col w-full h-full"
          >
            <div>...and many more!</div>
            <Icon
              name="mdi:facebook"
              class="group-hover:text-[#4267b2] duration-300 text-4xl"
            /></a
          >
        </div>
      </div>
    </div>
  </div>
</section>
<div class="lg:hidden w-full pb-48 px-16 bg-yellow-50">
  <div class="text-4xl lg:text-7xl text-center uppercase font-semibold mb-8">
    Our supporters
  </div>
  <div class="flex flex-col justify-center items-center gap-y-4">
    {
      testimonials.slice(0, 4).map((t, idx) => (
        <div>
          <Testimonial {...t} idx={idx} />
        </div>
      ))
    }
  </div>
</div>

<style>
  .horizontal {
    overflow-x: hidden;
  }

  .horizontal .pin-wrap {
    @apply flex relative;
  }
  .horizontal .animation-wrap {
    @apply flex relative;
  }

  .horizontal .item {
    height: calc(100vh - 400px);
    @apply relative flex px-4 py-8 mt-12 mb-12 flex-none w-96 items-center leading-7 select-none bg-transparent;
    /*  border-r border-black border-opacity-5 */
  }

  .horizontal .item:before {
    position: absolute;
    font-size: 24px;
    opacity: 0.13;
    font-weight: bold;
    z-index: -1;
    -webkit-transform: translate(-30px, -50px);
    transform: translate(-30px, -50px);
    line-height: 1;
  }

  /* .horizontal .animation-wrap.to-right {
    counter-reset: item;
    float: left;
  }

  .horizontal .animation-wrap.to-left {
    counter-reset: item 11;
    float: right;
  } */

  /* .horizontal .animation-wrap.to-right .item:before {
    counter-increment: item;
    content: counter(item);
  }

  .horizontal .animation-wrap.to-left .item:before {
    counter-increment: item -1;
    content: counter(item);
  } */

  .horizontal .animation-wrap .item:nth-child(2n + 2) {
    align-items: flex-start;
  }

  .horizontal .animation-wrap .item:nth-child(4n + 4) {
    align-items: flex-end;
  }
</style>

<script>
  import { gsap } from "gsap";
  import { animate, inView } from "motion";
  const horizontalSections = gsap.utils.toArray("div.horizontal");

  horizontalSections.forEach(function (sec, i) {
    const thisPinWrap = sec.querySelector(".pin-wrap");
    const thisAnimWrap = thisPinWrap.querySelector(".animation-wrap");

    const getToValue = () => -(thisAnimWrap.scrollWidth - window.innerWidth);

    gsap.fromTo(
      thisAnimWrap,
      {
        x: () =>
          thisAnimWrap.classList.contains("to-right") ? 0 : getToValue(),
      },
      {
        x: () =>
          thisAnimWrap.classList.contains("to-right") ? getToValue() : 0,
        ease: "none",
        scrollTrigger: {
          trigger: sec,
          start: "top top",
          end: () => "+=" + (thisAnimWrap.scrollWidth - window.innerWidth),
          pin: thisPinWrap,
          invalidateOnRefresh: true,
          //anticipatePin: 1,
          scrub: true,
          //markers: true,
        },
      }
    );
  });

  const scrollIndicatorParent = document.getElementById(
    "scroll-down-parent-supporters"
  );
  const scrollIndicator = document.getElementById(
    "scroll-down-indicator-supporters"
  );
  inView("#scroll-down-parent-supporters", (info) => {
    animate(
      scrollIndicatorParent,
      { opacity: [0, 1] },
      { duration: 1, delay: 0.5 }
    );
    animate(
      scrollIndicator,
      { y: [0, 10, 0] },
      { duration: 1.5, repeat: Infinity, easing: ["ease-out", "ease-in"] }
    );
  });
</script>
